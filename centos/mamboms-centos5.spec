%define name mamboms
%define version 1.2.4
%define unmangled_version 1.2.4
%define release 1
%define webapps /usr/local/webapps
%define installdir %{webapps}/%{name}
%define buildinstalldir %{buildroot}/%{installdir}
%define settingsdir %{buildinstalldir}/defaultsettings
%define logdir %{buildroot}/var/log/%{name}
%define scratchdir %{buildroot}/var/lib/%{name}/scratch
%define mediadir %{buildroot}/var/lib/%{name}/media
%define staticdir %{buildinstalldir}/static

# Turn off brp-python-bytecompile because it makes it difficult to generate the file list
# We still byte compile everything by passing in -O paramaters to python
%global __os_install_post %(echo '%{__os_install_post}' | sed -e 's!/usr/lib[^[:space:]]*/brp-python-bytecompile[[:space:]].*$!!g')

Summary: mamboms
Name: %{name}
Version: %{version}
Release: %{release}
License: GNU GPL v2
Group: Applications/Internet
BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-buildroot
Prefix: %{_prefix}
BuildArch: x86_64
Vendor: Centre for Comparative Genomics <web@ccg.murdoch.edu.au>
BuildRequires: python26-distribute postgresql84-devel openldap-devel openssl-devel python-devel
Requires: python26-distribute httpd python26-mod_wsgi postgresql84-libs postgresql84-plpython openldap-clients openssl

# Note: The application also depends on Matplotlib (and hence numpy) but they are not described in this RPM. Installation
# documents require Matplotlib to be installed prior to installation of this RPM.

%description
Django Mamboms web application

%prep
#%setup -n %{name}-%{unmangled_version} -n %{name}-%{unmangled_version}

%build
# Nothing, all handled by install

%install
NAME=%{name}

# Make sure the standard target directories exist
# These two contain files owned by the RPM
mkdir -p %{settingsdir}
mkdir -p %{staticdir}
# The rest are for persistent data files created by the app
mkdir -p %{logdir}
mkdir -p %{scratchdir}
mkdir -p %{mediadir}


# Create a python prefix
mkdir -p %{buildinstalldir}/{lib,bin,include}

# Install package into the prefix
cd $CCGSOURCEDIR
if ! test -e $CCGSOURCEDIR/build-number-.txt; then
    echo '#Generated by spec file' > build-number.txt
    export TZ=Australia/Perth
    DATE=`date`
    echo "build.timestamp=\"$DATE\"" >> build-number.txt
fi
echo "build.user=\"$USER\"" >> build-number.txt
echo "build.host=\"$HOSTNAME\"" >> build-number.txt
cp build-number.txt %{buildinstalldir}/

export PYTHONPATH=%{buildinstalldir}/lib
python2.6 /usr/bin/easy_install-2.6 -O1 --prefix %{buildinstalldir} --install-dir %{buildinstalldir}/lib .

# Create settings symlink so we can run collectstatic with the default settings
touch %{settingsdir}/__init__.py
ln -fs ..`find %{buildinstalldir} -path "*/$NAME/settings.py" | sed s:^%{buildinstalldir}::` %{settingsdir}/%{name}.py

# Create symlinks under install directory to real persistent data directories
ln -fs /var/log/%{name} %{buildinstalldir}/log
ln -fs /var/lib/%{name}/scratch %{buildinstalldir}/scratch
ln -fs /var/lib/%{name}/media %{buildinstalldir}/media

# Install WSGI configuration into httpd/conf.d
install -D centos/%{name}.ccg %{buildroot}/etc/httpd/conf.d/%{name}.ccg
install -D centos/django.wsgi %{buildinstalldir}/django.wsgi
install -m 0755 -D centos/%{name}-manage.py %{buildroot}/%{_bindir}/%{name}

# At least one python package has hardcoded shebangs to /usr/local/bin/python
find %{buildinstalldir} -name '*.py' -type f | xargs sed -i 's:^#!/usr/local/bin/python:#!/usr/bin/python:'
find %{buildinstalldir} -name '*.py' -type f | xargs sed -i 's:^#!/usr/local/python:#!/usr/bin/python:'

%post
mamboms collectstatic --noinput > /dev/null
# Remove root-owned logged files just created by collectstatic
rm -rf /var/log/%{name}/*
# Touch the wsgi file to get the app reloaded by mod_wsgi
touch ${installdir}/django.wsgi

%clean
rm -rf %{buildroot}

%files
%defattr(-,apache,apache,-)
/etc/httpd/conf.d/*
%{_bindir}/%{name}
%attr(-,apache,,apache) %{webapps}/%{name}
%attr(-,apache,,apache) /var/log/%{name}
%attr(-,apache,,apache) /var/lib/%{name}

